version: 0.2
phases:
  install:
    commands:
      # Install all dependencies (including dependencies for running tests)
      - npm install
  pre_build:
    commands:
      # Discover and run unit tests in the '__tests__' directory
      - npm run test
      # Remove all unit tests to reduce the size of the package that will be ultimately uploaded to Lambda
      - rm -rf ./__tests__
      # Remove all dependencies not needed for the Lambda deployment package (the packages from devDependencies in package.json)
      - npm prune --production
      # Reserve dependencies for lambda layer
      - mkdir -p lib/nodejs/
      - cp -R node_modules lib/nodejs/
  build:
    commands:
      # Use AWS SAM to package the application by using AWS CloudFormation
      # --output-template template-export.yml
      - aws cloudformation deploy --template-file template.yml --s3-bucket $S3_BUCKET --parameter-overrides EnvType=${ENV_TYPE} AirtableBase=${AIRTABLE_BASE} AirtableApiKey=${AIRTABLE_API_KEY} TwilioAccountSid=${TWILIO_ACCOUNT_SID} TwilioAuthToken=${TWILIO_AUTH_TOKEN} TwilioPhone=${TWILIO_PHONE} CrowwknowledgeHost=${CROSSKNOWLEDGE_HOST} CrossknowledgeApiKey=${CROSSKNOWLEDGE_API_KEY} ErrorTopicArn=${ERROR_TOPIC_ARN}
artifacts:
  type: zip
  files:
    - template-export.yml

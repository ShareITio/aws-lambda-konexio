# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform: AWS::Serverless-2016-10-31

# Shared configuration for all resources, more in
# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    # The PermissionsBoundary allows users to safely develop with their function's permissions constrained
    # to their current application. All the functions and roles in this application have to include it and
    # it has to be manually updated when you add resources to your application.
    # More information in https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html
    PermissionsBoundary: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary"

Parameters:
  AppId:
    Type: String
  Purpose:
    Type: String
    Default: testing
    AllowedValues:
      - testing
      - production
    Description: The purpose of this instance.
  AirtableBase:
    Type: String
    NoEcho: true
  AirtableBaseProduction:
    Type: String
    Default: _
    NoEcho: true
  AirtableApiKey:
    Type: String
    NoEcho: true
  TwilioAccountSid:
    Type: String
    NoEcho: true
  TwilioAuthToken:
    Type: String
    NoEcho: true
  TwilioPhone:
    Type: String
    NoEcho: true
  CrossknowledgeHost:
    Type: String
    NoEcho: true
  CrossknowledgeApiKey:
    Type: String
    NoEcho: true
  ErrorTopicArn:
    Type: String
    NoEcho: true
Conditions:
  CreateProdResources: !Equals [!Ref Purpose, production]

# Global information for all the functions
Globals:
  Function:
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 3
    Tracing: Active
    CodeUri: ./src

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: put-twilio-messages-into-airtable.js
  putTwilioMessagesIntoAirtable:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "putTwilioMessagesIntoAirtable_${Purpose}"
      Description: "Récupère toutes les 15 minutes les derniers SMS reçus et les envoies à Airtable."
      Handler: handlers/put-twilio-messages-into-airtable.putTwilioMessagesIntoAirtable
      Timeout: 20
      AutoPublishAlias: production # !If [CreateProdResources, production, !Ref "AWS::NoValue"]
      DeploymentPreference:
        Type: !If [CreateProdResources, Linear10PercentEvery1Minute, AllAtOnce]
      Layers:
        - !Ref KonexioBackendDepLayer
      Events:
        Schedule:
          Type: Schedule
          Properties:
            Schedule: rate(15 minutes)
            Name: Schedule15minutes
            Description: Déclenché toutes les 15 minutes
            Enabled: !If [CreateProdResources, True, False]
      Environment:
        Variables:
          AIRTABLE_BASE: !Ref AirtableBase
          AIRTABLE_API_KEY: !Ref AirtableApiKey
          TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          TWILIO_PHONE: !Ref TwilioPhone
          CROSSKNOWLEDGE_HOST: !Ref CrossknowledgeHost
          CROSSKNOWLEDGE_API_KEY: !Ref CrossknowledgeApiKey
          ERROR_TOPIC_ARN: !Ref ErrorTopicArn

  # This is a Lambda function config associated with the source code: create-crossknowledge-learners.js
  createCrossknowledgeLearners:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "createCrossknowledgeLearners_${Purpose}"
      Description: "Créé des comptes apprenants dans crossknowledge."
      Handler: handlers/create-crossknowledge-learners.createCrossknowledgeLearners
      Layers:
        - !Ref KonexioBackendDepLayer
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Method: POST
            Path: /crossknowledge/learners
            RestApiId: !Ref ApiGatewayApi
      Environment:
        Variables:
          AIRTABLE_BASE: !Ref AirtableBase
          AIRTABLE_API_KEY: !Ref AirtableApiKey
          TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          TWILIO_PHONE: !Ref TwilioPhone
          CROSSKNOWLEDGE_HOST: !Ref CrossknowledgeHost
          CROSSKNOWLEDGE_API_KEY: !Ref CrossknowledgeApiKey
          ERROR_TOPIC_ARN: !Ref ErrorTopicArn
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Purpose
      TracingEnabled: true
      Auth:
        ApiKeyRequired: true
      Cors:
        AllowMethods: "'OPTIONS,POST,GET,PUT,DELETE,HEAD,PATCH'"
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token''"
        AllowOrigin: "'*''"
        AllowCredentials: True

  KonexioBackendDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: konexio-backend-dependencies
      Description: Dependencies for konexio-backend
      ContentUri: lib/
      CompatibleRuntimes:
        - nodejs6.10
        - nodejs8.10
        - nodejs10.x
        - nodejs12.x
      LicenseInfo: "MIT"
      RetentionPolicy: Retain
